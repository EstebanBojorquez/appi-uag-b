{"version":3,"sources":["components/TutorialHeader/index.js","components/TutorialHeader/TutorialHeader.js","components/Info/Info.js","content/LandingPage/index.js","content/LandingPage/LandingPage.js","App.js","serviceWorker.js","index.js"],"names":["TutorialHeader","react_default","a","createElement","UIShell","aria-label","element","Link","to","prefix","_20_default","user_avatar_20_default","app_switcher_20_default","InfoSection","props","className","concat","heading","children","InfoCard","offset","react_router_dom","body","icon","LandingPage","Breadcrumb","noTrailingSlash","BreadcrumbItem","href","Info_InfoSection","Info_InfoCard","App","Fragment","components_TutorialHeader","react_router","exact","path","component","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ed452620.chunk.js","sourcesContent":["import TutorialHeader from './TutorialHeader';\nexport default TutorialHeader;\n","import React from 'react';\nimport {\n  Header,\n  HeaderName,\n  HeaderGlobalBar,\n  HeaderGlobalAction,\n  SkipToContent,\n} from 'carbon-components-react/lib/components/UIShell';\nimport Notification20 from '@carbon/icons-react/lib/notification/20';\nimport UserAvatar20 from '@carbon/icons-react/lib/user--avatar/20';\nimport AppSwitcher20 from '@carbon/icons-react/lib/app-switcher/20';\nimport { Link } from 'react-router-dom';\n\nconst TutorialHeader = () => (\n  <Header aria-label=\"Carbon Tutorial\">\n    <SkipToContent />\n    <HeaderName\n      element={Link}\n      to=\"/\"\n      prefix=\"Sistema de Información de la Coordinación de Investigación y Desarrollo Tecnológico -\">\n      SIAUG\n    </HeaderName>\n    <HeaderGlobalBar>\n      <HeaderGlobalAction aria-label=\"Notifications\">\n        <Notification20 />\n      </HeaderGlobalAction>\n      <HeaderGlobalAction aria-label=\"User Avatar\">\n        <UserAvatar20 />\n      </HeaderGlobalAction>\n      <HeaderGlobalAction aria-label=\"App Switcher\">\n        <AppSwitcher20 />\n      </HeaderGlobalAction>\n    </HeaderGlobalBar>\n  </Header>\n);\n\nexport default TutorialHeader;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst InfoSection = props => (\n  <section className={`bx--row ${props.className} info-section`}>\n    <div className=\"bx--col-md-8 bx--col-lg-4\">\n      <h3 className=\"info-section__heading\">{props.heading}</h3>\n    </div>\n    {props.children}\n  </section>\n);\n\nconst InfoCard = props => {\n  return (\n    <div\n      className={`info-card bx--col-md-4 bx--col-lg-4 ${\n        props.offset ? `bx--offset-lg-4` : null\n      }`}>\n      <Link to=\"/\">\n        <h4 className=\"info-card__heading\">\n          <strong>{props.prefix}</strong>\n          {` - ${props.heading}`}\n        </h4>\n        {props.body ? <p className=\"info-card__body\">{props.body}</p> : null}\n        {props.icon}\n      </Link>\n    </div>\n  );\n};\n\nexport { InfoSection, InfoCard };\n","import LandingPage from './LandingPage';\nexport default LandingPage;\n","import React from 'react';\nimport { Breadcrumb, BreadcrumbItem } from 'carbon-components-react';\nimport { InfoSection, InfoCard } from '../../components/Info';\n\nconst LandingPage = () => {\n  return (\n    <div className=\"bx--grid bx--grid--full-width landing-page\">\n      <div className=\"bx--row landing-page__banner\">\n        <div className=\"bx--col-lg-16\">\n          <Breadcrumb noTrailingSlash aria-label=\"Page navigation\">\n            <BreadcrumbItem>\n              <a href=\"/\">Inicio</a>\n            </BreadcrumbItem>\n          </Breadcrumb>\n          <h1 className=\"landing-page__heading\">Bienvenido</h1>\n        </div>\n        <div className=\"bx--col-lg-8 bx--col-md-4\">\n          <p>\n            Bienvenido al sistema de Información de la Dirección de\n            Investigación de la Universidad Autónoma de Guadalajara.\n          </p>\n          <p>\n            Mediante esta herramienta, usted podrá dar seguimiento a sus\n            Proyectos de Investigación, Tesis, Publicaciones y/o Currículum\n            Vitae.\n          </p>\n          <p>\n            Esperamos que los datos que proporcionamos en el mismo le sean de\n            utilidad, cualquier duda, comentario o aclaración al correo\n            electrónico:{' '}\n            <a href=\"mailto:investigacion@edu.uag.mx\">\n              investigacion@edu.uag.mx\n            </a>{' '}\n            o a la extensión 35811.\n          </p>\n        </div>\n      </div>\n      <InfoSection heading=\"Secciones\" className=\"landing-page__r3\">\n        <InfoCard prefix=\"01\" heading=\"Datos generales\" />\n        <InfoCard prefix=\"02\" heading=\"Formación Académica\" />\n        <InfoCard prefix=\"03\" heading=\"Formación de capital humano\" />\n        <InfoCard\n          prefix=\"04\"\n          heading=\"Producción científica, tecnológica y de innovación\"\n          offset\n        />\n        <InfoCard prefix=\"05\" heading=\"Difusión y divulgación\" />\n        <InfoCard prefix=\"06\" heading=\"Vinculación\" />\n        <InfoCard prefix=\"07\" heading=\"Proyectos de investigación\" offset />\n        <InfoCard prefix=\"08\" heading=\"Lineas de investigación\" />\n        <InfoCard\n          prefix=\"09\"\n          heading=\"Participación en la vida institucional\"\n        />\n      </InfoSection>\n    </div>\n  );\n};\n\nexport default LandingPage;\n","import React, { Component } from 'react';\nimport './app.scss';\nimport { Content } from 'carbon-components-react/lib/components/UIShell';\nimport TutorialHeader from './components/TutorialHeader';\nimport { Route, Switch } from 'react-router-dom';\nimport LandingPage from './content/LandingPage';\n\nclass App extends Component {\n  render() {\n    return (\n      <>\n        <TutorialHeader />\n        <Content>\n          <Switch>\n            <Route exact path=\"/\" component={LandingPage} />\n          </Switch>\n        </Content>\n      </>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'core-js/modules/es7.array.includes';\nimport 'core-js/modules/es6.array.fill';\nimport 'core-js/modules/es6.string.includes';\nimport 'core-js/modules/es6.string.trim';\nimport 'core-js/modules/es7.object.values';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { HashRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}